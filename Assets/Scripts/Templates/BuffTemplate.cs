// Generated by template.py. DO NOT EDIT!
using System.Collections.Generic;
using System.Xml;

public sealed class BuffTemplate
{
	public uint nId;	//id
	public uint nType;	//enum BuffType
	public uint nTrigger;	//enum BuffTriggerType
	public int iEffectA;	//效果值A
	public int iBout;	//持续回合
	public string szImg;	//图片名
}


public sealed class BuffTemplateData
{
	public static Dictionary<uint, BuffTemplate> Data = new Dictionary<uint, BuffTemplate>();

	public static void Init(XmlNode xml)
	{
		foreach (XmlElement element in xml.ChildNodes)
		{
			BuffTemplate template = new BuffTemplate();
			template.nId = element["nId"] != null ? uint.Parse(element["nId"].InnerText) : 0;	//id
			template.nType = element["nType"] != null ? uint.Parse(element["nType"].InnerText) : 0;	//enum BuffType
			template.nTrigger = element["nTrigger"] != null ? uint.Parse(element["nTrigger"].InnerText) : 0;	//enum BuffTriggerType
			template.iEffectA = element["iEffectA"] != null ? int.Parse(element["iEffectA"].InnerText) : 0;	//效果值A
			template.iBout = element["iBout"] != null ? int.Parse(element["iBout"].InnerText) : 0;	//持续回合
			template.szImg = element["szImg"] != null ? element["szImg"].InnerText : "";	//图片名

			Data.Add(template.nId, template);
		}
	}

	public static BuffTemplate GetData(uint nId, object className = null)
	{
		if (!Data.ContainsKey(nId))
		{
			if (className != null)
				UnityEngine.Debug.LogError(string.Format("BuffTemplate is null, Id = {0} @ {1}", "nId="+nId, className));
			return null;
		}
		BuffTemplate template = Data[nId];
		return template;
	}
}